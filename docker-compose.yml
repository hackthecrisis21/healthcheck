version: '3'
services:
    db:
        image: "postgres"
        container_name: "db"
        environment:
            - POSTGRES_PASSWORD=django
            - POSTGRES_USER=django
            - POSTGRES_DB=healthcheck
            - "POSTGRES_HOST_AUTH_METHOD=trust"
        volumes:
            - ./dbdata:/var/lib/postgresql/data:Z
        networks:
            - djangonetwork
    redis:
        container_name: "redis"
        image: redis:alpine
    django:
        container_name: "django"
        build:
            context: .
            dockerfile: ./Dockerfile
        command: python manage.py runserver 0.0.0.0:8000
        env_file: ./.env
        volumes:
            - .:/app
        ports:
            - "8000:8000"
        depends_on:
            - db
            - redis
        links:
            - db
            - redis
        networks:
            - djangonetwork
    celery:
        container_name: "celery"
        image: celery:4.4
        build: .
        env_file: ./.env
        command: celery -A healthcheck worker -l info
        depends_on:
            - db
            - redis
        links:
            - redis
            - db
            - django
        networks:
            - djangonetwork
    celery-beat:
        container_name: "celery-beat"
        image: celery:4.4
        build: .
        env_file: ./.env
        command: celery -A healthcheck beat -l info
        depends_on:
            - db
            - redis
        links:
            - redis
            - db
            - django
        networks:
            - djangonetwork
networks:
      djangonetwork:
          driver: bridge
